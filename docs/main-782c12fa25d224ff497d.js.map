{"version":3,"sources":["webpack:///.rc/index.tsx","webpack:///.rc/app.tsx","webpack:///.rc/modeldef.ts","webpack:///.rc/resources.ts","webpack:///.rc/loadstate.ts","webpack:///.rc/gamestate.ts","webpack:///.rc/world.ts","webpack:///.rc/tiledef.ts","webpack:///.rc/keyboard.ts","webpack:///.rc/cars.ts","webpack:///.rc/entity.ts","webpack:///.rc/model/realmodel.ts","webpack:///.rc/css/style.css?79e4","webpack:///.rc/css/style.css","webpack:///.rc/gameview.tsx"],"names":[],"mappings":"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","file":"main-782c12fa25d224ff497d.js","sourcesContent":["import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport * as PIXI from 'pixi.js';\nimport {App} from './app';\nimport {ResourceLoaderState} from './resources';\n\n\nimport \"jquery\";\nimport \"bootstrap/dist/js/bootstrap\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./css/style.css\";\n\n\nconst app = <App />;\n\nvar target = document.createElement(\"div\");\nReactDOM.render(app, target);\ndocument.body.appendChild(target);\n\n\n\n// WEBPACK FOOTER //\n// .rc/index.tsx","import * as React from \"react\";\nimport * as PIXI from \"pixi.js\";\nimport { GameView } from \"./gameview\";\nimport * as Utils from \"./utils\";\nimport { ResourceLoaderState } from \"./resources\";\n\ninterface AppState {\n  gameView: JSX.Element | null;\n}\n\nexport class App extends React.Component<{}, AppState> {\n  public state: AppState = {\n    gameView: <GameView firstState={new ResourceLoaderState()} />\n  };\n\n  render() {\n    return this.state.gameView;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// .rc/app.tsx","export namespace Model {\n  export const StepsPerSecond = 30;\n  export const TargetSpeed = 10;\n  export const MaxSpeed = 20;\n  export const MaxAcceleration = 100;\n\n  // in meter\n  export const TileWidth = 30;\n  export const TileHeight = 30;\n\n  export const TrackMin = 13;\n  export const TrackMax = 17;\n\n  export const CarWidth = 1.8;\n  export const CarLength = 4.5;\n\n  export const LaneWidth = 3;\n\n  export interface ICar {\n    // in world coordinates\n    pos: {\n      x: number;\n      y: number;\n    };\n    // (0-360), 0 is up and it goes clockwise\n    angle: number;\n    id: number;\n    hasLock: boolean\n  }\n\n  export enum TileType {\n    Empty,\n    Crossing,\n    Street\n  }\n\n  export enum TileOrientation {\n    NorthSouth,\n    WestEast,\n    SouthEast,\n    NorthEast,\n    NorthWest,\n    SouthWest\n  }\n\n  export interface ITileBase {\n    // so that IWorld.tiles[x][y]\n    coord: {\n      x: number;\n      y: number;\n    };\n  }\n\n  export interface IStreet extends ITileBase {\n    type: TileType.Street;\n    orientation: TileOrientation;\n  }\n\n  export interface IEmpty extends ITileBase {\n    type: TileType.Empty;\n  }\n\n  export interface ICrossing extends ITileBase {\n    type: TileType.Crossing;\n  }\n\n  export type ITile = IStreet | ICrossing | IEmpty;\n\n  export interface IWorld {\n    update(): void;\n\n    readonly cars: ICar[];\n    readonly tiles: ITile[][];\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// .rc/modeldef.ts","import * as PIXI from \"pixi.js\";\nimport { State } from \"./gameview\";\nimport { LoadState } from \"./loadstate\";\nimport { GameState } from \"./gamestate\";\n\ntype OrientationString = \"ns\" | \"we\" | \"se\" | \"ne\" | \"nw\" | \"sw\";\n\nexport interface Resources {\n  tiles: {\n    crossing: PIXI.Texture;\n    street: { [key: string]: PIXI.Texture };\n    car: PIXI.Texture[];\n  };\n}\n\nexport class ResourceLoaderState extends LoadState {\n  constructor() {\n    super();\n  }\n\n  load(loader: PIXI.loaders.Loader): void {\n    loader.add(\"atlas\", \"assets/tiles.json\");\n    loader.add(\"music\", \"assets/waltz_short.mp3\")\n  }\n\n  loaded(loader: PIXI.loaders.Loader, res: any): State {\n    let tiles: any = res.atlas.textures;\n    let tex = (name: string): PIXI.Texture => tiles[name];\n\n    let resources: Resources = {\n      tiles: {\n        crossing: tex(\"crossing.png\"),\n        street: {\n          ns: tex(\"street-ns.png\"),\n          we: tex(\"street-we.png\"),\n          se: tex(\"street-se.png\"),\n          ne: tex(\"street-ne.png\"),\n          nw: tex(\"street-nw.png\"),\n          sw: tex(\"street-sw.png\")\n        },\n        car: [1, 2, 3].map(idx => tex(`car-${idx}.png`))\n      }\n    };\n\n    const music = res.music.data as PIXI.sound.Sound\n    music.play({ loop: true })\n\n    return new GameState(resources);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// .rc/resources.ts","import {State} from './gameview';\nimport * as PIXI from 'pixi.js';\n\n\n\nexport abstract class LoadState extends State {\n\n    private stage: PIXI.Container;\n    private text: PIXI.Text;\n    private nextState: State;\n\n    constructor() {\n        super();\n        \n        this.stage = new PIXI.Container();\n        this.text = new PIXI.Text(\"Loading...\", {fill: \"#ffffff\"});\n        this.stage.addChild(this.text);\n    }\n\n    enter(prev: State, renderer: PIXI.SystemRenderer): void {\n        this.text.anchor.x = 0.5;\n        this.text.anchor.y = 0.5;\n        this.text.x = renderer.width / 2;\n        this.text.y = renderer.height / 2;\n\n        let loader = new PIXI.loaders.Loader();\n        this.load(loader);\n        loader.once(\"complete\", this.onLoaded.bind(this));\n        loader.load();\n    }\n\n    private onLoaded(loader: PIXI.loaders.Loader, resources: any) {\n        this.nextState = this.loaded(loader, resources);\n    }\n\n    protected abstract load(loader: PIXI.loaders.Loader): void;\n    protected abstract loaded(loader: PIXI.loaders.Loader, resources: any): State;\n\n    leave(next: State): void {\n\n    }\n\n    update(dt: number): State | null {\n        return this.nextState;\n    }\n\n    render(dt: number): PIXI.Container | null {\n        return this.stage;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// .rc/loadstate.ts","import * as PIXI from \"pixi.js\";\r\nimport * as Sound from 'pixi-sound'\r\nimport { State } from \"./gameview\";\r\nimport { Resources } from \"./resources\";\r\nimport { World, WorldGenerator } from \"./world\";\r\nimport { Entity } from \"./entity\";\r\nimport { Key, Keys } from \"./keyboard\";\r\nimport { DummyModel } from \"./model/dummymodel\";\r\nimport { Tile } from \"./tiledef\";\r\nimport { Model } from \"./modeldef\";\r\nimport { Cars } from \"./cars\";\r\nimport { BackendWorld } from \"./model/realmodel\";\r\n\r\nconst ScreenDimensionX = 75;\r\nconst ScreenDimensionY = 75;\r\nconst PlayerSpeed = 1;\r\n\r\nclass Controls {\r\n  up = new Key(Keys.Up);\r\n  down = new Key(Keys.Down);\r\n  left = new Key(Keys.Left);\r\n  right = new Key(Keys.Right);\r\n\r\n  horizontalMovement() {\r\n    let hm = 0;\r\n    if (this.up.isDown()) {\r\n      hm -= 1;\r\n    }\r\n    if (this.down.isDown()) {\r\n      hm += 1;\r\n    }\r\n    return hm;\r\n  }\r\n\r\n  verticalMovement() {\r\n    let vm = 0;\r\n    if (this.left.isDown()) {\r\n      vm -= 1;\r\n    }\r\n    if (this.right.isDown()) {\r\n      vm += 1;\r\n    }\r\n    return vm;\r\n  }\r\n}\r\n\r\nexport class GameState extends State {\r\n  private model = new BackendWorld();\r\n\r\n  private worldGenerator: WorldGenerator;\r\n  private world: World;\r\n  private entities: Entity[] = [];\r\n  private stage = new PIXI.Container();\r\n  private view = new PIXI.Container();\r\n  private screenWidth: number;\r\n  private screenHeight: number;\r\n  private ctrl = new Controls();\r\n  private cars: Cars;\r\n\r\n  private gameTime = 0;\r\n\r\n  private screenx = 2.5;\r\n  private screeny = 2.5;\r\n\r\n  constructor(private resources: Resources) {\r\n    super();\r\n    this.cars = new Cars(resources);\r\n    this.worldGenerator = new WorldGenerator(resources);\r\n  }\r\n\r\n  enter(prev: State, renderer: PIXI.SystemRenderer): void {\r\n    this.world = this.worldGenerator.buildWorld(this.model.tiles);\r\n\r\n    this.view.addChild(this.world);\r\n    this.view.addChild(this.cars);\r\n    this.stage.addChild(this.view);\r\n  }\r\n\r\n  leave(next: State): void {\r\n    this.view.removeChild(this.world);\r\n  }\r\n\r\n  addEntity<T extends Entity>(entity: T): T {\r\n    this.entities.push(entity);\r\n    this.view.addChild(entity);\r\n\r\n    return entity;\r\n  }\r\n\r\n  update(dt: number): State | null {\r\n    this.world.update(dt);\r\n\r\n    this.gameTime += dt;\r\n\r\n    const timePerStep = 1 / Model.StepsPerSecond;\r\n    while (this.gameTime >= timePerStep) {\r\n      this.gameTime -= timePerStep;\r\n      this.model.update();\r\n      this.cars.updateCars(this.model.cars);\r\n    }\r\n\r\n    this.entities.forEach(entity => entity.update(dt));\r\n\r\n    // update player\r\n    this.screenx += this.ctrl.verticalMovement() * PlayerSpeed * dt;\r\n    this.screeny += this.ctrl.horizontalMovement() * PlayerSpeed * dt;\r\n\r\n    // update view\r\n    this.view.x = -this.screenx;\r\n    this.view.y = -this.screeny;\r\n    this.world.setView(\r\n      this.screenx,\r\n      this.screeny,\r\n      ScreenDimensionX,\r\n      ScreenDimensionY\r\n    );\r\n\r\n    return null;\r\n  }\r\n\r\n  render(dt: number): PIXI.Container | null {\r\n    return this.stage;\r\n  }\r\n\r\n  resized(renderer: PIXI.SystemRenderer): void {\r\n    this.screenWidth = renderer.width;\r\n    this.screenHeight = renderer.height;\r\n    this.stage.x = this.screenWidth / 2;\r\n    this.stage.y = this.screenHeight / 2;\r\n    let ratio = Math.min(\r\n      renderer.width / ScreenDimensionX,\r\n      renderer.height / ScreenDimensionY\r\n    );\r\n    let scale = this.stage.scale;\r\n    //scale.x = scale.y = ratio;\r\n    scale.x = scale.y = ScreenDimensionX * 4;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// .rc/gamestate.ts","import * as PIXI from \"pixi.js\";\nimport * as Utils from \"./utils\";\nimport { Resources } from \"./resources\";\nimport { Tile, EmptyTile, CrossingTile, StreetTile } from \"./tiledef\";\nimport { Model } from \"./modeldef\";\n\nexport class World extends PIXI.Container {\n  constructor(\n    public width: number,\n    public height: number,\n    private tiles: Tile[][]\n  ) {\n    super();\n\n    for (let x = 0; x < width; ++x) {\n      for (let y = 0; y < height; ++y) {\n        this.addChild(this.at(x, y));\n      }\n    }\n  }\n\n  setView(x: number, y: number, width: number, height: number) {}\n\n  at(x: number, y: number): Tile {\n    return this.tiles[x][y];\n  }\n\n  update(dt: number): void {}\n}\n\nclass Interval {\n  private _min: number;\n  private _max: number;\n\n  constructor(begin: number, end: number) {\n    this._min = Math.min(begin, end);\n    this._max = Math.max(begin, end);\n  }\n\n  min(): number {\n    return this._min;\n  }\n\n  max(): number {\n    return this._max;\n  }\n\n  size(): number {\n    return this.max() - this.min() + 1; // max is inclusive!\n  }\n\n  intersects(other: Interval): boolean {\n    return (\n      Math.min(this.max(), other.max()) >= Math.max(this.min(), other.min())\n    );\n  }\n\n  intersect(other: Interval): Interval {\n    if (!this.intersects(other)) {\n      throw \"Intervals do not intersect!\";\n    }\n    return new Interval(\n      Math.max(this.min(), other.min()),\n      Math.min(this.max(), other.max())\n    );\n  }\n\n  hull(other: Interval): Interval {\n    return new Interval(\n      Math.min(this.min(), other.min()),\n      Math.max(this.max(), other.max())\n    );\n  }\n\n  rand(): number {\n    return this.min() + Math.floor(this.size() * Math.random());\n  }\n}\n\nexport class WorldGenerator {\n  constructor(private resources: Resources) {}\n\n  buildWorld(map: Model.ITile[][]): World {\n    return new World(\n      map.length,\n      map[0].length,\n      map.map((row, x) =>\n        row\n          .map(tile => {\n            switch (tile.type) {\n              case Model.TileType.Crossing:\n                return new CrossingTile(this.resources);\n              case Model.TileType.Street:\n                return new StreetTile(tile.orientation, this.resources);\n              default:\n                return new EmptyTile();\n            }\n          })\n          .map((tile, y) => {\n            tile.x = x;\n            tile.y = y;\n            return tile;\n          })\n      )\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// .rc/world.ts","import * as PIXI from \"pixi.js\";\nimport * as Utils from \"./utils\";\nimport { Resources } from \"./resources\";\nimport { Model } from \"./modeldef\";\n\nexport abstract class Tile extends PIXI.Container {\n  update(dt: number): void {}\n}\n\nexport abstract class ImageTile extends Tile {\n  abstract getTileImg(res: Resources): PIXI.Sprite;\n\n  constructor(private res: Resources) {\n    super();\n    this.createTex();\n  }\n\n  createTex() {\n    this.addChild(this.getTileImg(this.res));\n  }\n\n  makeSprite(tex: PIXI.Texture) {\n    let sprite = new PIXI.Sprite(tex);\n    sprite.scale.x = 1 / sprite.width;\n    sprite.scale.y = 1 / sprite.height;\n    return sprite;\n  }\n}\n\nexport class EmptyTile extends Tile {}\n\nexport class CrossingTile extends ImageTile {\n  getTileImg(res: Resources) {\n    return this.makeSprite(res.tiles.crossing);\n  }\n}\n\nexport class StreetTile extends ImageTile {\n  private orientation: Model.TileOrientation;\n  constructor(orientation: Model.TileOrientation, res: Resources) {\n    super(res);\n    this.orientation = orientation;\n    super.createTex();\n  }\n\n  createTex() {}\n\n  getTileImg(res: Resources) {\n    let tileOrientation = \"\";\n    switch (this.orientation) {\n      case Model.TileOrientation.NorthSouth:\n        tileOrientation = \"ns\";\n        break;\n      case Model.TileOrientation.WestEast:\n        tileOrientation = \"we\";\n        break;\n      case Model.TileOrientation.SouthEast:\n        tileOrientation = \"se\";\n        break;\n      case Model.TileOrientation.NorthEast:\n        tileOrientation = \"ne\";\n        break;\n      case Model.TileOrientation.NorthWest:\n        tileOrientation = \"nw\";\n        break;\n      case Model.TileOrientation.SouthWest:\n        tileOrientation = \"sw\";\n        break;\n      default:\n        console.log(this.orientation);\n        tileOrientation = \"we\";\n        break;\n    }\n    console.log(tileOrientation);\n    return this.makeSprite(res.tiles.street[tileOrientation]);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// .rc/tiledef.ts","\nexport class Key {\n\n    public press: () => void;\n    public release: () => void;\n    private _isPressed: boolean = false;\n\n    constructor(private keycode: number) {\n        window.addEventListener(\"keydown\", this.handleDown.bind(this));\n        window.addEventListener(\"keyup\", this.handleUp.bind(this));\n    }\n\n    public isDown(): boolean {\n        return this._isPressed;\n    }\n\n    public isUp(): boolean {\n        return !this._isPressed;\n    }\n\n    private handleDown(event: KeyboardEvent) {\n        if(event.keyCode == this.keycode) {\n            if(this.isUp() && this.press) {\n                this.press();\n            }\n            this._isPressed = true;\n            event.preventDefault();\n        }\n    }\n\n    private handleUp(event: KeyboardEvent) {\n        if(event.keyCode == this.keycode) {\n            if(this.isDown() && this.release) {\n                this.release();\n            }\n            this._isPressed = false;\n            event.preventDefault();\n        }\n    }\n}\n\nexport enum Keys {\n    A = 65,\n    B,\n    C,\n    D,\n    E,\n    F,\n    H,\n    I,\n    J,\n    K,\n    L,\n    M,\n    N,\n    O,\n    P,\n    Q,\n    R,\n    S,\n    T,\n    U,\n    V,\n    W,\n    X,\n    Y,\n    Z,\n    _0 = 48,\n    _1,\n    _2,\n    _3,\n    _4,\n    _5,\n    _6,\n    _7,\n    _8,\n    _9,\n    Backspace = 8,\n    Tab = 9,\n    Enter = 13,\n    Shift = 16,\n    Ctrl = 17,\n    CapsLock = 20,\n    Esc = 27,\n    Space = 32,\n    PageUp = 33,\n    PageDown = 34,\n    End = 35,\n    Home = 36,\n    Left = 37,\n    Up = 38,\n    Right = 39,\n    Down = 40,\n    Insert = 45,\n    Delete = 46\n}\n\n\n// WEBPACK FOOTER //\n// .rc/keyboard.ts","import * as PIXI from \"pixi.js\";\nimport { Entity } from \"./entity\";\nimport { Model } from \"./modeldef\";\nimport { Resources } from \"./resources\";\n\nexport class Cars extends Entity {\n  private graphics: Map<number, PIXI.Sprite> = new Map();\n  private res: Resources;\n\n  constructor(res: Resources) {\n    super();\n    this.res = res;\n  }\n\n  update(dt: number): void {}\n\n  updateCars(cars: Model.ICar[]) {\n    const newCarIds: Set<number> = new Set();\n    for (const car of cars) {\n      newCarIds.add(car.id);\n      const graphic = this.graphics.get(car.id);\n      if (graphic === undefined) {\n        this.addCar(car);\n      } else {\n        this.updateCarSprite(graphic, car);\n      }\n    }\n    // Garbage collect vanished cars\n    for (const carId of this.graphics.keys()) {\n      if (!newCarIds.has(carId)) {\n        this.removeCar(carId);\n      }\n    }\n  }\n\n  private generateCarSprite() {\n    const carTileIdx = Math.floor(Math.random() * this.res.tiles.car.length);\n    const sprite = new PIXI.Sprite(this.res.tiles.car[carTileIdx]);\n    sprite.scale.x = 1 / this.res.tiles.crossing.width;\n    sprite.scale.y = 1 / this.res.tiles.crossing.height;\n    return sprite;\n  }\n\n  private addCar(car: Model.ICar) {\n    const carSprite = this.generateCarSprite();\n    // center the sprite's anchor point\n    carSprite.anchor.set(0.5);\n\n    this.addChild(carSprite);\n    this.graphics.set(car.id, carSprite);\n    this.updateCarSprite(carSprite, car);\n  }\n  private updateCarSprite(carSprite: PIXI.Sprite, car: Model.ICar) {\n    // move the sprite to the center of the screen\n    carSprite.x = car.pos.x / Model.TileWidth;\n    carSprite.y = car.pos.y / Model.TileHeight;\n    carSprite.rotation = Math.PI + car.angle;\n    carSprite.alpha = car.hasLock? 1.0 : 0.75\n  }\n  private removeCar(carId: number) {\n    const sprite = this.graphics.get(carId);\n    if (sprite === undefined) return;\n    this.removeChild(sprite);\n    this.graphics.delete(carId);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// .rc/cars.ts","import * as PIXI from 'pixi.js';\n\nexport abstract class Entity extends PIXI.Container {\n    abstract update(dt: number): void;\n}\n\n\n// WEBPACK FOOTER //\n// .rc/entity.ts","import { Model } from \"../modeldef\";\n\nclass Vector {\n    constructor(public readonly x: number, public readonly y: number) {}\n    \n    add(v: Vector): Vector {\n        return new Vector(this.x + v.x, this.y + v.y);\n    }\n    \n    negative(): Vector {\n        return new Vector(-this.x, -this.y);\n    }\n    \n    minus(v: Vector): Vector {\n        return new Vector(this.x - v.x, this.y - v.y);\n    }\n    \n    mul(s: number): Vector {\n        return new Vector(s * this.x, s * this.y);\n    }\n    rotate(angle: number): Vector {\n        return new Vector(\n            this.x * Math.cos(angle) - this.y * Math.sin(angle),\n            this.x * Math.sin(angle) + this.y * Math.cos(angle)\n        );\n    }\n    \n    get angle(): number {\n        return Math.atan2(this.y, this.x);\n    }\n    get length(): number {\n        return Math.sqrt(this.x ** 2 + this.y ** 2);\n    }\n}\n\nvar nextId = 1;\n\nclass Car {\n    private randomList: number[] = [];\n    private curRand: number = 0;\n    readonly id = nextId++;\n    \n    public alive: boolean = true;\n    \n    private get random(): number {\n        return this.randomList[this.curRand % 10];\n    }\n    \n    public roadToTake(futureIdx: number, possibleRoads: number): number {\n        return Math.floor(\n            this.randomList[(this.curRand + futureIdx) % 10] * possibleRoads\n        );\n    }\n    \n    public gotoNextRoad(possibleRoads: number): number {\n        const road = this.roadToTake(0, possibleRoads);\n        ++this.curRand;\n        return road;\n    }\n    \n    constructor(\n        public edge: Edge,\n        public alpha: number = 0,\n        public speed: number = 0,\n        public acceleration: number = 0\n    ) {\n        for (let i = 0; i < 10; ++i) {\n            this.randomList.push(Math.random());\n        }\n    }\n\n    public heldLocks = 0;\n}\n\nclass Node {\n    outs: Edge[] = [];\n    ins: Edge[] = [];\n    \n    constructor(public pos: Vector) {}\n}\n\nnamespace EdgeShapes {\n    export const Straight: EdgeShape = {\n        fn: t => new Vector(t, 0),\n        length: 1\n    };\n    export const Sinus: EdgeShape = {\n        fn: t => new Vector(t, 0.03 * Math.sin(2 * Math.PI * t)),\n        length: 1\n    };\n    export const CrossingInnerTurnRight: EdgeShape = {\n        fn: t => {\n            const totalLength = Model.CarLength + Math.PI * Model.LaneWidth / 2;\n            const baseLength = (Model.CarLength + Model.LaneWidth) / Math.SQRT2;\n            const tChange = Model.CarLength / (2 * totalLength);\n            if (t <= tChange) {\n                return new Vector(t, t).mul(\n                    totalLength / (2 * Math.SQRT2 * baseLength)\n                );\n            } else if (t >= 1 - tChange) {\n                return new Vector(1, 0).minus(\n                    new Vector(t, t).mul(totalLength / (2 * Math.SQRT2 * baseLength))\n                );\n            } else {\n                const tCircle = (t - tChange) / (1 - 2 * tChange);\n                return new Vector(1, 1)\n                .mul(Model.CarLength / (4 * Math.SQRT2 * baseLength))\n                .add(\n                    new Vector(\n                        0.5 - Math.cos((2 * tCircle + 1) * Math.PI / 4) / Math.SQRT2,\n                        -0.5 + Math.sin((2 * tCircle + 1) * Math.PI / 4) / Math.SQRT2\n                    ).mul(Model.LaneWidth / Math.SQRT2)\n                );\n            }\n        },\n        length: 1\n    };\n    export const RightTurn: EdgeShape = {\n        fn: t =>\n        new Vector(\n            0.5 - Math.cos((2 * t + 1) * Math.PI / 4) / Math.SQRT2,\n            -0.5 + Math.sin((2 * t + 1) * Math.PI / 4) / Math.SQRT2\n        ),\n        length: Math.PI / (2 * Math.SQRT2)\n    };\n}\n\nclass Lock {\n    holder: null | Car = null\n}\n\ninterface EdgeShape {\n    fn: (t: number) => Vector; // t in [0, 1]; Vector in [(0,0), (1,1)]\n    length: number;\n}\n\nclass Edge {\n    public cars: Car[] = [];\n    public length: number;\n    \n    public done = false;\n    public curRound = 0;\n    \n    constructor(\n        public from: Node,\n        public to: Node,\n        public shape: EdgeShape,\n        public locks: Lock[]\n    ) {\n        this.length = this.to.pos.minus(this.from.pos).length * this.shape.length;\n    }\n    \n    getPosition(t: number) {\n        const diffVector = this.to.pos.minus(this.from.pos);\n        const amplitudeFactor = diffVector.length;\n        const angleShift = diffVector.angle;\n        return this.shape\n        .fn(t)\n        .mul(amplitudeFactor)\n        .rotate(angleShift)\n        .add(this.from.pos);\n    }\n    getAngle(t: number) {\n        const diffquot = this.getPosition(t + 0.01).minus(\n            this.getPosition(t - 0.01)\n        );\n        return diffquot.angle;\n    }\n    \n    checkRound(round: number): boolean {\n        if (round != this.curRound) {\n            this.curRound = round;\n            //this.reserved = [];\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n\nclass Tile {\n    constructor(\n        public coords: Vector,\n        public inNodes: (Node | null)[],\n        public outNodes: (Node | null)[],\n        addNodes: Node[] = []\n    ) {\n        for (const n of this.inNodes) {\n            if (n) {\n                n.pos = n.pos.add(this.pos);\n            }\n        }\n        \n        for (const n of this.outNodes) {\n            if (n) {\n                n.pos = n.pos.add(this.pos);\n            }\n        }\n        for (const n of addNodes) {\n            n.pos = n.pos.add(this.pos);\n        }\n    }\n    \n    get pos(): Vector {\n        return this.coords.mul(Model.TileWidth);\n    }\n}\n\n\nfunction connect(\n    from: Node,\n    to: Node,\n    shape: EdgeShape = EdgeShapes.Straight,\n    lock?: Lock[]\n) {\n    const e = new Edge(from, to, shape, lock || []);\n    from.outs.push(e);\n    to.ins.push(e);\n    return e;\n}\n\nfunction mergeNodes(n1: Node, n2: Node): Node {\n    if (n1.pos.x != n2.pos.x || n1.pos.y != n2.pos.y) {\n        throw new Error(\"merged nodes should be on the same position\");\n    }\n    \n    for (let i = 0; i < n2.ins.length; ++i) {\n        const e = n2.ins[i];\n        e.to = n1;\n        n1.ins.push(e);\n    }\n    \n    for (let i = 0; i < n2.outs.length; ++i) {\n        const e = n2.outs[i];\n        e.from = n1;\n        n1.outs.push(e);\n    }\n    \n    return n1;\n}\n\nfunction setupTileNodes(tmpl: Model.ITile, pos: Vector): Tile {\n    if (tmpl.type === Model.TileType.Street) {\n        const o = tmpl.orientation;\n        if (o === Model.TileOrientation.NorthSouth) {\n            const topMin = new Node(new Vector(Model.TrackMin, Model.TileHeight));\n            const topMax = new Node(new Vector(Model.TrackMax, Model.TileHeight));\n            const bottomMin = new Node(new Vector(Model.TrackMin, 0));\n            const bottomMax = new Node(new Vector(Model.TrackMax, 0));\n            \n            connect(topMin, bottomMin);\n            connect(bottomMax, topMax);\n            \n            return new Tile(\n                pos,\n                [bottomMax, null, topMin, null],\n                [topMax, null, bottomMin, null]\n            );\n        } else if (o === Model.TileOrientation.WestEast) {\n            const rightMin = new Node(new Vector(Model.TileWidth, Model.TrackMin));\n            const rightMax = new Node(new Vector(Model.TileWidth, Model.TrackMax));\n            const leftMin = new Node(new Vector(0, Model.TrackMin));\n            const leftMax = new Node(new Vector(0, Model.TrackMax));\n            \n            connect(rightMax, leftMax);\n            connect(leftMin, rightMin);\n            \n            return new Tile(\n                pos,\n                [null, leftMin, null, rightMax],\n                [null, rightMin, null, leftMax]\n            );\n        } else {\n            throw new Error(\"not implemented\");\n        }\n    } else if (tmpl.type === Model.TileType.Crossing) {\n        // todo fix\n        const topMin = new Node(new Vector(Model.TrackMin, Model.TileHeight));\n        const topMax = new Node(new Vector(Model.TrackMax, Model.TileHeight));\n        const bottomMin = new Node(new Vector(Model.TrackMin, 0));\n        const bottomMax = new Node(new Vector(Model.TrackMax, 0));\n        \n        const topIn = new Node(\n            new Vector(Model.TrackMin, Model.TileHeight / 2 + 2 * Model.LaneWidth)\n        );\n        const bottomOut = new Node(\n            new Vector(Model.TrackMin, Model.TileHeight / 2 - 2 * Model.LaneWidth)\n        );\n        const bottomIn = new Node(\n            new Vector(Model.TrackMax, Model.TileHeight / 2 - 2 * Model.LaneWidth)\n        );\n        \n        const topOut = new Node(\n            new Vector(Model.TrackMax, Model.TileHeight / 2 + 2 * Model.LaneWidth)\n        );\n\n        const leftMid = new Node(\n            new Vector(Model.TrackMin, Model.TileHeight / 2)\n        );\n        const rightMid = new Node(\n            new Vector(Model.TrackMax, Model.TileHeight / 2)\n        );\n\n\n        const nwLock = new Lock\n        const neLock = new Lock\n        const swLock = new Lock\n        const seLock = new Lock\n        \n        connect(topMin, topIn);\n        connect(topIn, leftMid, undefined, [nwLock, swLock]);\n        connect(leftMid, bottomOut, undefined, [nwLock, swLock])\n        connect(bottomOut, bottomMin);\n        connect(bottomMax, bottomIn);\n        connect(bottomIn, rightMid, undefined, [neLock, seLock]);\n        connect(rightMid, topOut, undefined, [neLock, seLock]);\n        connect(topOut, topMax);\n        \n        const rightMin = new Node(new Vector(Model.TileWidth, Model.TrackMin));\n        const rightMax = new Node(new Vector(Model.TileWidth, Model.TrackMax));\n        const leftMin = new Node(new Vector(0, Model.TrackMin));\n        const leftMax = new Node(new Vector(0, Model.TrackMax));\n        \n        const leftIn = new Node(\n            new Vector(Model.TileWidth / 2 - 2 * Model.LaneWidth, Model.TrackMin)\n        );\n        const rightOut = new Node(\n            new Vector(Model.TileWidth / 2 + 2 * Model.LaneWidth, Model.TrackMin)\n        );\n        const rightIn = new Node(\n            new Vector(Model.TileWidth / 2 + 2 * Model.LaneWidth, Model.TrackMax)\n        );\n        const leftOut = new Node(\n            new Vector(Model.TileWidth / 2 - 2 * Model.LaneWidth, Model.TrackMax)\n        );\n        const topMid = new Node(\n            new Vector(Model.TileWidth / 2, Model.TrackMax)\n        );\n        const bottomMid = new Node(\n            new Vector(Model.TileWidth / 2, Model.TrackMin)\n        );\n        \n        connect(rightMax, rightIn);\n        connect(rightIn, topMid, undefined, [nwLock, neLock]);\n        connect(topMid, leftOut, undefined, [nwLock, neLock]);\n        connect(leftOut, leftMax);\n        connect(leftMin, leftIn);\n        connect(leftIn, bottomMid, undefined, [swLock, seLock]),\n        connect(bottomMid, rightOut, undefined, [swLock, seLock]);\n        connect(rightOut, rightMin);\n        \n        // Turn rights\n        // TODO\n        connect(bottomIn, rightOut, EdgeShapes.RightTurn, [seLock]);\n        connect(rightIn, topOut, EdgeShapes.RightTurn, [neLock]);\n        connect(topIn, leftOut, EdgeShapes.RightTurn, [nwLock]);\n        connect(leftIn, bottomOut, EdgeShapes.RightTurn, [swLock]);\n        \n        \n        return new Tile(\n            pos,\n            [bottomMax, leftMin, topMin, rightMax],\n            [topMax, rightMin, bottomMin, leftMax],\n            [topIn, bottomIn, leftIn, rightIn, topOut, bottomOut, leftOut, rightOut, topMid, bottomMid, rightMid, leftMid]\n        );\n    } else {\n        return new Tile(pos, [null, null, null, null], [null, null, null, null]);\n    }\n}\n\nfunction empty(): Model.ITile {\n    return {\n        coord: { x: 0, y: 0 },\n        type: Model.TileType.Empty\n    };\n}\nfunction horizontal(): Model.ITile {\n    return {\n        coord: { x: 0, y: 0 },\n        type: Model.TileType.Street,\n        orientation: Model.TileOrientation.NorthSouth\n    };\n}\n\nfunction vertical(): Model.ITile {\n    return {\n        coord: { x: 0, y: 0 },\n        type: Model.TileType.Street,\n        orientation: Model.TileOrientation.WestEast\n    };\n}\n\nfunction cross(): Model.ITile {\n    return {\n        coord: { x: 0, y: 0 },\n        type: Model.TileType.Crossing\n    };\n}\n\nexport class BackendWorld implements Model.IWorld {\n    tiles: Model.ITile[][] = [\n        [empty(), vertical(), vertical(), vertical(), empty()],\n        [horizontal(), cross(), cross(), cross(), horizontal()],\n        [horizontal(), cross(), cross(), cross(), horizontal()],\n        [horizontal(), cross(), cross(), cross(), horizontal()],\n        [empty(), vertical(), vertical(), vertical(), empty()]\n    ];\n    \n    private genNodes: Node[] = [];\n    \n    private pieces: Tile[][] = [];\n    private autos: Car[] = [];\n    \n    private round: number = 1;\n    \n    constructor() {\n        for (let x = 0; x < this.tiles.length; ++x) {\n            this.pieces.push([]);\n            for (let y = 0; y < this.tiles[0].length; ++y) {\n                this.tiles[x][y].coord = { x, y };\n                this.pieces[x].push(setupTileNodes(this.tiles[x][y], new Vector(x, y)));\n            }\n        }\n        \n        const dirs = [\n            new Vector(0, -1),\n            new Vector(-1, 0),\n            new Vector(0, 1),\n            new Vector(1, 0)\n        ];\n        \n        // merge nodes\n        for (let x = 0; x < this.pieces.length; ++x) {\n            for (let y = 0; y < this.pieces[0].length; ++y) {\n                const pos = new Vector(x, y);\n                for (const diri of [0, 1, 2, 3]) {\n                    const dir = dirs[diri];\n                    const to = pos.add(dir);\n                    const t1 = this.pieces[x][y];\n                    if (\n                        to.x >= 0 &&\n                        to.y >= 0 &&\n                        to.x < this.pieces.length &&\n                        to.y < this.pieces[0].length\n                    ) {\n                        const t2 = this.pieces[to.x][to.y];\n                        const n1 = t1.inNodes[diri];\n                        const n2 = t2.outNodes[diri];\n                        \n                        if ((n1 == null) != (n2 == null)) {\n                            throw new Error(\"!!!!\");\n                        } else if (n1 != null && n2 != null) {\n                            const n = mergeNodes(n1, n2);\n                            t1.inNodes[diri] = n;\n                            t2.outNodes[diri] = n;\n                        }\n                    } else {\n                        if (to.y < 0) {\n                            const n = t1.inNodes[0];\n                            if (n) {\n                                this.genNodes.push(n);\n                            }\n                        }\n                        \n                        if (to.x < 0) {\n                            const n = t1.inNodes[1];\n                            if (n) {\n                                this.genNodes.push(n);\n                            }\n                        }\n                        \n                        if (to.y >= this.pieces[0].length) {\n                            const n = t1.inNodes[2];\n                            if (n) {\n                                this.genNodes.push(n);\n                            }\n                        }\n                        \n                        if (to.x >= this.pieces.length) {\n                            const n = t1.inNodes[3];\n                            if (n) {\n                                this.genNodes.push(n);\n                            }\n                        }\n                        \n                        if (to.y >= this.pieces[0].length) {\n                            const n = t1.inNodes[2];\n                            if (n) {\n                                this.genNodes.push(n);\n                            }\n                        }\n                        \n                        if (to.x >= this.pieces.length) {\n                            const n = t1.inNodes[3];\n                            if (n) {\n                                this.genNodes.push(n);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    \n    insertCars() {\n        // insert cars\n        for (const n of this.genNodes) {\n            const e = n.outs[0];\n            const car = e.cars[e.cars.length - 1];\n            let canCreate = true;\n            if (car) {\n                canCreate = false;\n                if (car.alpha * e.length > Model.CarLength) {\n                    canCreate = true;\n                }\n            }\n            if (canCreate && this.autos.length < 40 && Math.random() < 0.18) {\n                // new car\n                const c = new Car(e, 0, 0, 0);\n                e.cars.push(c);\n                this.autos.push(c);\n            }\n            false;\n        }\n    }\n    \n    updateCars() {\n        // update cars\n        let kill = false;\n        for (const car of this.autos) {\n            car.speed += car.acceleration / Model.StepsPerSecond;\n            car.speed = Math.max(car.speed, 0)\n            let meters = car.speed / Model.StepsPerSecond;\n            while (meters > 0) {\n                const alphaDiff = meters / car.edge.length;\n                car.alpha += alphaDiff;\n                \n                if (car.alpha > 1) {\n                    meters = (car.alpha - 1) * car.edge.length;\n                    car.alpha = 0;\n                    const index = car.edge.cars.indexOf(car);\n                    if (index < 0) {\n                        throw new Error(\"car wasn't on this edge's list\");\n                    }\n                    car.edge.cars.splice(index, 1);\n                    const outs = car.edge.to.outs;\n                    \n                    if ((outs.length == 0 || outs[car.roadToTake(0, outs.length)].locks.every(lock => lock.holder != car))\n                        && car.edge.locks.find(lock => lock.holder == car)) {\n                        car.edge.locks.filter(lock => lock.holder == car).forEach(\n                            lock => {\n                                lock.holder = null\n                                --car.heldLocks\n                            }\n                        )\n                    }\n\n                    if (outs.length == 0) {\n                        meters = 0;\n                        car.alive = false;\n                        kill = true;\n                    } else {\n                        car.edge = outs[car.gotoNextRoad(outs.length)];\n                        car.edge.cars.push(car);\n                    }\n                } else {\n                    meters = 0;\n                }\n            }\n        }\n        \n        if (kill) {\n            this.autos = this.autos.filter(car => car.alive);\n        }\n    }\n    \n    controllCars() {\n        this.round++;\n        const processEdge = (edge: Edge) => {\n            if (edge.checkRound(this.round)) {\n                const { to } = edge;\n                \n                // process dependent edges\n                for (const next of to.outs) {\n                    processEdge(next);\n                }\n                \n                // process all cars that are on this edge\n                edge.cars.forEach((car, i) => {\n                    const nextEdge = edge.to.outs[car.roadToTake(0, edge.to.outs.length)];\n                    const sameEdge = i > 0;\n                    car.acceleration = Model.MaxAcceleration / 2;\n\n\n                    const canLock = edge.locks.every((value) => value.holder == null || value.holder == car)\n                    if (canLock && i == 0) {\n                        edge.locks.forEach((value) => {\n                            if (value.holder == null)\n                                car.heldLocks++\n                            value.holder = car\n                        })\n                    }\n\n                    if (nextEdge) {\n                        const canLock = nextEdge.locks.every((value) => value.holder == null || value.holder == car)\n                        if (canLock && i == 0) {\n                            nextEdge.locks.forEach((value) => {\n                                if (value.holder == null)\n                                    car.heldLocks++\n                                value.holder = car\n                            })\n                        }\n\n                        if (nextEdge.locks.find(lock => lock.holder != car && lock.holder != null)) {\n                            car.acceleration = -Model.MaxAcceleration * 2\n                        }\n                    }\n\n                    if (sameEdge || nextEdge) {\n                        const nextCar: Car | undefined = sameEdge\n                            ? edge.cars[i - 1]\n                            : nextEdge.cars[nextEdge.cars.length - 1];\n\n\n                        const driveToTileEnd = i == 0 && nextEdge && nextEdge.cars.length == 0 && nextEdge.locks.find(lock => lock.holder != car && lock.holder != null)\n                        if (driveToTileEnd) {\n                            const alphaDiff = car.alpha - 0.8 - nextEdge.length / edge.length + (Model.CarLength + 1) / edge.length;\n                            car.acceleration = 1 / Model.StepsPerSecond * (-700 * alphaDiff - 100 * (car.speed));\n                        }\n                        if (nextCar && nextCar.acceleration > -Model.MaxAcceleration * 2 + 1) {\n                            const driveTo = (driveToTileEnd? 1 : nextCar.alpha)\n                            const alphaDiff = sameEdge\n                                ? car.alpha - driveTo + (Model.CarLength + 1) / edge.length\n                                : car.alpha - 1 - nextEdge.length / edge.length * driveTo + (Model.CarLength + 1) / edge.length;\n                            car.acceleration = 1 / Model.StepsPerSecond * (-700 * alphaDiff - 100 * (car.speed - nextCar.speed));\n                        }\n                    }\n                    \n                    if (car.speed + car.acceleration / Model.StepsPerSecond > Model.MaxSpeed) {\n                        car.acceleration = 0;\n                        car.speed = Model.MaxSpeed;\n                    }\n\n                    if (edge.locks.find(lock => lock.holder != car && lock.holder != null)) {\n                        car.acceleration = -Model.MaxAcceleration * 2\n                    }\n                });\n            }\n        };\n        \n        for (const n of this.genNodes) {\n            for (const e of n.outs) {\n                processEdge(e);\n            }\n        }\n    }\n    \n    update() {\n        this.insertCars();\n        this.controllCars();\n        this.updateCars();\n    }\n    \n    get cars(): Model.ICar[] {\n        return this.autos.map(car => {\n            const { from, to } = car.edge;\n            return {\n                pos: car.edge.getPosition(car.alpha),\n                angle: car.edge.getAngle(car.alpha),\n                id: car.id,\n                hasLock: car.heldLocks > 0\n            };\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// .rc/model/realmodel.ts","\nvar content = require(\"!!../../node_modules/css-loader/index.js!./style.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!./style.css\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!./style.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// .rc/css/style.css\n// module id = 240\n// module chunks = 1","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"html,\\nbody {\\n  width: 100%;\\n  height: 100%;\\n\\n  padding: 0;\\n  margin: 0;\\n\\n  overflow: hidden;\\n}\\nbody {\\n  background-color: black;\\n}\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/css-loader!.rc/css/style.css\n// module id = 241\n// module chunks = 1","import * as React from \"react\";\nimport * as PIXI from \"pixi.js\";\nimport * as Utils from \"./utils\";\n\nexport abstract class State {\n  enter(prev: State, renderer: PIXI.SystemRenderer): void {}\n  leave(next: State): void {}\n\n  resized(renderer: PIXI.SystemRenderer): void {}\n\n  abstract update(dt: number): State | null;\n  abstract render(dt: number): PIXI.Container | null;\n}\n\nexport class GameView extends React.Component<{ firstState: State }, {}> {\n  private renderer: PIXI.SystemRenderer;\n  private lastUpdate: number;\n  private currentState: State;\n  private gameCanvas: HTMLElement | null;\n\n  constructor(props: { firstState: State }) {\n    super(props);\n  }\n\n  private run(state: State) {\n    this.setGameState(state);\n    this.lastUpdate = Date.now();\n    this.onFrame();\n  }\n\n  private setGameState(nextState: State) {\n    let prevState = this.currentState;\n    if (prevState) {\n      prevState.leave(nextState);\n    }\n    this.currentState = nextState;\n    if (nextState) {\n      nextState.enter(prevState, this.renderer);\n      nextState.resized(this.renderer);\n    }\n  }\n\n  private resized() {\n    if (!this.gameCanvas) {\n      return;\n    }\n    this.renderer.resize(\n      window.innerWidth, // this.gameCanvas.clientWidth,\n      window.innerHeight // this.gameCanvas.clientHeight //this.gameCanvas.clientWidth * 0.7\n    );\n    if (this.currentState) {\n      this.currentState.resized(this.renderer);\n    }\n  }\n\n  private onFrame() {\n    let now = Date.now();\n    let dt = (now - this.lastUpdate) / 1000;\n    this.lastUpdate = now;\n\n    if (this.currentState) {\n      // render\n      let stage = this.currentState.render(dt);\n      if (stage) {\n        this.renderer.render(stage);\n      }\n\n      // update\n      let nextState = this.currentState.update(dt);\n      if (nextState) {\n        this.setGameState(nextState);\n      }\n\n      // reqest next frame\n      requestAnimationFrame(this.onFrame.bind(this));\n    }\n  }\n\n  componentDidMount() {\n    this.renderer = PIXI.autoDetectRenderer(\n      window.innerWidth,\n      window.innerHeight,\n      {\n        backgroundColor: 0x000000,\n        antialias: true\n      }\n    );\n\n    this.gameCanvas!.appendChild(this.renderer.view);\n    this.resized();\n    //this.renderer.resize(this.gameCanvas.clientWidth, this.gameCanvas.clientHeight);\n    window.onresize = () => {\n      this.resized();\n    };\n\n    console.log(\"componentDidMount\");\n\n    this.run(this.props.firstState);\n\n    setTimeout(() => this.resized(), 200);\n  }\n\n  render() {\n    return (\n      <div className=\"game-canvas-container\" ref={c => (this.gameCanvas = c)} />\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// .rc/gameview.tsx"],"sourceRoot":""}